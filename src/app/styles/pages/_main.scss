@import '../utils/variables';

// Container and Layout
.container {
  display: flex;
  flex-direction: column;
  background-color: $color-background-dark;
  min-height: 100vh; 
  position: relative;
  width: 100%;
  height: auto; // Allow container to extend based on content
  overflow: visible; // Don't clip content
}

// Main content
.main {
  flex: 1;
  display: flex;
  flex-direction: column;
  width: 100%;
  padding-bottom: 0;
  position: relative;
  overflow: visible;
  z-index: 1; // Update to handle the fixed positioning of video
}

// Landing page specific styles
.hero {
  position: relative;
  min-height: calc(100vh - 75px); // Precisely account for the header height
  max-height: none; // Remove any max height constraints
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 60px 20px;
  overflow: hidden;
  box-sizing: border-box; // Ensure padding is included in the height calc
  margin-top: 0; // Remove any top margin that could push content up

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(135deg, #121212 0%, #1f1f1f 100%);
    z-index: -2;
  }

  &::after {
    content: '';
    position: absolute;
    width: 150%;
    height: 150%;
    top: -25%;
    left: -25%;
    background: radial-gradient(circle, rgba($color-primary, 0.15) 0%, transparent 70%);
    z-index: -1;
    animation: pulseBackground 15s ease infinite alternate;
  }
}

.heroContent {
  max-width: 1100px;
  width: 100%;
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 60px;
  padding: 0; // Remove padding that might cause overflow
  
  @media (max-width: 900px) {
    flex-direction: column;
    gap: 40px;
  }
}

.heroText {
  flex: 1;

  h1 {
    font-size: 3.5rem;
    line-height: 1.1;
    margin-bottom: 24px;
    font-weight: 700;
    background: linear-gradient(90deg, #1DCD9F, #169976);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;

    @media (max-width: 768px) {
      font-size: 2.5rem;
    }
  }

  p {
    font-size: 1.25rem;
    line-height: 1.6;
    color: rgba($color-white, 0.9);
    margin-bottom: 32px;
    max-width: 540px;
  }
}

.heroVisual {
  flex: 1;
  position: relative;
  min-height: 400px;
  
  @media (max-width: 900px) {
    width: 100%;
    min-height: 300px;
  }
}

.heroImage {
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: 16px;
  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.4);
  animation: floatAnimation 6s ease-in-out infinite;
}

.circle {
  position: absolute;
  border-radius: 50%;
  opacity: 0.8;
  filter: blur(40px);
  z-index: -1;
  
  &.circle1 {
    width: 200px;
    height: 200px;
    background: rgba($color-primary, 0.3);
    top: -40px;
    left: -40px;
    animation: moveCircle1 10s ease-in-out infinite alternate;
  }
  
  &.circle2 {
    width: 300px;
    height: 300px;
    background: rgba($color-secondary, 0.2);
    bottom: -60px;
    right: -60px;
    animation: moveCircle2 15s ease-in-out infinite alternate;
  }
}

// Features section
.featuresSection {
  padding: 100px 20px;
  background-color: lighten($color-background-dark, 3%);
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
  box-sizing: border-box; // Include padding in width calculation
}

.sectionTitle {
  text-align: center;
  margin-bottom: 60px;
  
  h2 {
    font-size: 2.5rem;
    font-weight: 700;
    margin-bottom: 16px;
    color: $color-white;
    
    @media (max-width: 768px) {
      font-size: 2rem;
    }
  }
  
  p {
    font-size: 1.2rem;
    color: rgba($color-white, 0.7);
    max-width: 600px;
    margin: 0 auto;
  }
}

.featuresGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: 40px;
  max-width: 1200px;
  width: 100%;
}

.featureCard {
  background-color: rgba(255, 255, 255, 0.05);
  border-radius: 16px;
  padding: 30px;
  transition: transform 0.3s ease, box-shadow 0.3s ease;
  
  &:hover {
    transform: translateY(-10px);
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
  }
  
  .featureIcon {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 70px;
    height: 70px;
    border-radius: 20px;
    margin-bottom: 24px;
    background: linear-gradient(135deg, rgba($color-primary, 0.7), rgba($color-secondary, 0.7));
    color: $color-white;
    font-size: 2rem;
  }
  
  h3 {
    font-size: 1.4rem;
    margin-bottom: 16px;
    color: $color-white;
  }
  
  p {
    color: rgba($color-white, 0.7);
    line-height: 1.5;
    font-size: 1rem;
  }
}

// CTA section
.ctaSection {
  padding: 80px 20px;
  text-align: center;
  background: linear-gradient(135deg, rgba($color-primary, 0.1), rgba($color-secondary, 0.1));
  width: 100%;
  box-sizing: border-box; // Include padding in width calculation
  
  h2 {
    font-size: 2.5rem;
    font-weight: 700;
    margin-bottom: 24px;
    color: $color-white;
    
    @media (max-width: 768px) {
      font-size: 2rem;
    }
  }
  
  p {
    font-size: 1.2rem;
    color: rgba($color-white, 0.8);
    max-width: 700px;
    margin: 0 auto 40px;
  }
}

// Button styling
.loginButton {
  display: inline-block;
  background: linear-gradient(90deg, $color-primary, $color-secondary);
  color: $color-white;
  font-weight: 600;
  font-size: 1.1rem;
  padding: 16px 40px;
  border-radius: 50px;
  text-decoration: none;
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
  box-shadow: 0 10px 20px rgba($color-primary, 0.3);
  
  &:hover {
    transform: translateY(-3px);
    box-shadow: 0 15px 30px rgba($color-primary, 0.4);
    
    &::before {
      transform: translateX(100%);
    }
  }
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(255, 255, 255, 0.2),
      transparent
    );
    transition: transform 0.6s ease;
  }
  
  .highlight {
    color: $color-white;
    font-weight: 700;
  }
}

// Footer styling
.footer {
  padding: 30px 40px;
  text-align: center;
  background-color: darken($color-background-dark, 2%);
  position: relative; // Ensure it's in the flow
  width: 100%;
  padding-bottom: calc(30px + 70px); // Add extra padding to account for the control bar
  
  p {
    color: rgba($color-white, 0.6);
    font-size: 0.95rem;
    margin: 0; // Remove default margins
  }
}

// Animations
@keyframes floatAnimation {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-20px);
  }
}

@keyframes pulseBackground {
  0%, 100% {
    opacity: 0.5;
  }
  50% {
    opacity: 0.8;
  }
}

@keyframes moveCircle1 {
  0% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(30px, 30px);
  }
}

@keyframes moveCircle2 {
  0% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(-40px, -40px);
  }
}

// Existing app styles (for authenticated users)
.sessionContainer {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 20px; // Adjust padding for new layout
  box-sizing: border-box; // Include padding in width calculation
  display: flex;
  flex-direction: column;
  flex: 1; // Take up available space
  position: relative;
  z-index: 10;

  .sessionCard, .emdrCard {
    background-color: transparent; // Remove background styles
    box-shadow: none; // Remove box shadow
    margin-bottom: 0; // Remove margin
  }
  
  .connectionStatus {
    display: flex;
    align-items: center;
    gap: 10px;
    
    .statusDot {
      width: 10px;
      height: 10px;
      border-radius: 50%;
      background-color: #666;
      
      &.connected {
        background-color: $color-secondary;
        box-shadow: 0 0 10px rgba($color-secondary, 0.6);
      }
    }
  }
  
  .peerIdContainer {
    display: flex;
    align-items: center;
    gap: 10px;
  }
  
  .peerIdDisplay {
    display: flex;
    align-items: center;
    gap: 8px;
    
    code {
      background-color: rgba(255, 255, 255, 0.1);
      padding: 4px 8px;
      border-radius: 4px;
      font-family: monospace;
    }
  }
  
  .copyButton {
    background-color: rgba($color-secondary, 0.8);
    color: $color-white;
    border: none;
    border-radius: 4px;
    width: 36px;
    height: 36px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.2s;
    
    &:hover {
      background-color: $color-secondary;
    }
    
    &:disabled {
      opacity: 0.7;
      cursor: not-allowed;
    }
  }
  
  .videoSection {
    padding: 30px;
    box-sizing: border-box;
    width: 100%;
  }
  
  .videoGrid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
    gap: 30px;
    margin-bottom: 30px;
    
    @media (max-width: 900px) {
      grid-template-columns: 1fr;
    }
  }
  
  .videoCard {
    background-color: rgba(0, 0, 0, 0.3);
    border-radius: 12px;
    overflow: hidden;
    
    .videoHeader {
      display: flex;
      align-items: center;
      gap: 10px;
      padding: 12px 16px;
      background-color: rgba($color-primary, 0.5);
      
      h3 {
        margin: 0;
        font-size: 1.1rem;
      }
    }
    
    .videoWrapper {
      position: relative;
      padding-top: 56.25%; // 16:9 aspect ratio
      
      video {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
      }
      
      .noStreamOverlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: rgba(0, 0, 0, 0.7);
      }
    }
  }
  
  .connectionControls {
    display: flex;
    flex-direction: column;
    gap: 15px;
    
    .inputWrapper {
      width: 100%;
      
      .peerIdInput {
        width: 100%;
        padding: 14px;
        border-radius: 8px;
        background-color: rgba(255, 255, 255, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
        color: $color-white;
        font-size: 1rem;
        
        &::placeholder {
          color: rgba($color-white, 0.5);
        }
        
        &:focus {
          outline: none;
          border-color: rgba($color-secondary, 0.6);
          box-shadow: 0 0 0 2px rgba($color-secondary, 0.2);
        }
      }
    }
    
    .buttonGroup {
      display: flex;
      gap: 15px;
      
      button {
        flex: 1;
        padding: 14px;
        border-radius: 8px;
        border: none;
        color: $color-white;
        font-weight: 600;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
        transition: all 0.2s;
        
        &:disabled {
          opacity: 0.5;
          cursor: not-allowed;
        }
      }
      
      .connectButton {
        background-color: rgba($color-secondary, 0.8);
        
        &:hover:not(:disabled) {
          background-color: $color-secondary;
        }
      }
      
      .disconnectButton {
        background-color: rgba(#ff3b30, 0.8);
        
        &:hover:not(:disabled) {
          background-color: #ff3b30;
        }
      }
    }
  }
  
  .emdrCard {
    .emdrHeader {
      padding: 20px 30px;
      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
      display: flex;
      justify-content: space-between;
      align-items: center;
      
      h3 {
        margin: 0;
      }
      
      .roleTag {
        padding: 5px 10px;
        background-color: rgba($color-secondary, 0.2);
        border-radius: 20px;
        color: $color-secondary;
        font-size: 0.9rem;
      }
    }
    
    .emdrVisual {
      padding: 30px;
      min-height: 200px;
      display: flex;
      align-items: center;
      justify-content: center;
    }
  }
}

// New fullscreen video layout
.videoBackground {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  z-index: 0;
  background-color: $color-background-dark;
  overflow: hidden;
  
  .remoteStream {
    position: absolute;
    width: 100%;
    height: 100%;
    object-fit: cover;
    z-index: 1;
  }
  
  .noStreamOverlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: rgba(0, 0, 0, 0.7);
    z-index: 2;
    font-size: 1.5rem;
    color: $color-white;
  }
  
  .localStreamWrapper {
    position: absolute;
    bottom: 110px;
    right: 20px;
    width: 220px;
    height: 165px; // 16:9 aspect ratio
    z-index: 3;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.3);
    border: 2px solid rgba($color-primary, 0.6);
    
    .localStream {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
    
    .videoDisabledOverlay {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      display: flex;
      align-items: center;
      justify-content: center;
      background-color: rgba(0, 0, 0, 0.8);
      font-size: 3rem;
      color: $color-white;
    }
  }
  
  .visualOverlay {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 4;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    pointer-events: none; // Allow clicks to pass through to video
    background-color: transparent; // Ensure overlay is invisible
  }
}

// Controls panel
.controlsPanel {
  position: relative;
  z-index: 5; // Stay on top of video background
  width: 100%;
  max-width: 800px;
  margin: 0 auto;
  padding: 15px;
  box-sizing: border-box;
  background-color: rgba($color-background-dark, 0.8);
  backdrop-filter: blur(10px);
  border-radius: 12px;
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
  margin-top: 20px;
  
  // Improved responsive styling
  @media (max-width: 840px) {
    max-width: 95%;
    padding: 12px;
  }
  
  .statusBar {
    display: flex;
    flex-wrap: wrap; // Allow wrapping on smaller screens
    justify-content: space-between;
    align-items: center;
    padding: 16px 24px;
    background-color: rgba(255, 255, 255, 0.05);
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    
    @media (max-width: 600px) {
      padding: 12px;
      gap: 10px;
    }
    
    .connectionStatus, .peerIdContainer {
      @media (max-width: 600px) {
        width: 100%;
        justify-content: center;
      }
    }
    
    .peerIdDisplay {
      max-width: 100%;
      overflow: hidden;
      
      code {
        overflow: hidden;
        text-overflow: ellipsis;
        max-width: 180px;
        display: inline-block;
        
        @media (max-width: 400px) {
          max-width: 120px;
        }
      }
    }
  }
  
  .connectionControls {
    display: flex;
    flex-direction: column;
    gap: 15px;
    
    .inputWrapper {
      width: 100%;
      box-sizing: border-box;
      
      .peerIdInput {
        width: 100%;
        padding: 14px;
        border-radius: 8px;
        background-color: rgba(255, 255, 255, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
        color: $color-white;
        font-size: 1rem;
        box-sizing: border-box; // Ensures padding doesn't add to width
        
        &::placeholder {
          color: rgba($color-white, 0.5);
        }
        
        &:focus {
          outline: none;
          border-color: rgba($color-secondary, 0.6);
          box-shadow: 0 0 0 2px rgba($color-secondary, 0.2);
        }
      }
    }
    
    .buttonGroup {
      display: flex;
      gap: 15px;
      
      @media (max-width: 500px) {
        flex-direction: column;
      }
      
      button {
        flex: 1;
        padding: 14px;
        border-radius: 8px;
        border: none;
        color: $color-white;
        font-weight: 600;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
        transition: all 0.2s;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        
        &:disabled {
          opacity: 0.5;
          cursor: not-allowed;
        }
      }
    }
  }
}

// Media control bar
.mediaControlBar {
  position: fixed;
  bottom: 0;
  left: 0;
  width: 100%;
  background-color: rgba($color-background-dark, 0.85);
  backdrop-filter: blur(8px);
  z-index: 10;
  padding: 12px 0;
  box-shadow: 0 -4px 20px rgba(0, 0, 0, 0.3);
  
  .mediaControlsWrapper {
    max-width: 600px;
    margin: 0 auto;
    display: flex;
    justify-content: space-around;
    gap: 20px;
    padding: 0 20px;
    
    @media (max-width: 500px) {
      gap: 10px;
    }
  }
  
  .mediaButton {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 6px;
    background: transparent;
    border: none;
    color: $color-white;
    font-size: 1rem;
    padding: 8px 20px;
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.2s ease;
    
    svg {
      font-size: 1.5rem;
      margin-bottom: 5px;
    }
    
    &:hover:not(:disabled) {
      background-color: rgba($color-white, 0.1);
    }
    
    &:disabled {
      opacity: 0.5;
      cursor: not-allowed;
    }
    
    &.disabled {
      color: rgba($color-primary, 0.8);
    }
    
    span {
      font-size: 0.8rem;
      
      @media (max-width: 400px) {
        display: none; // Hide text on small screens, show only icons
      }
    }
  }
  
  .mediaButton.active {
    background-color: rgba($color-secondary, 0.3);
    box-shadow: 0 0 0 2px rgba($color-secondary, 0.5);
  }
}

// Ensure global form styling
input, button, textarea, select {
  box-sizing: border-box;
  max-width: 100%;
}

.remoteVideoDisabledOverlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background-color: rgba(0, 0, 0, 0.7);
  color: white;
  z-index: 2;
}

.remoteVideoDisabledOverlay svg {
  margin-bottom: 10px;
  opacity: 0.8;
}

.remoteVideoDisabledOverlay p {
  font-size: 1.5rem;
}

// Call button
.callButton {
  position: fixed;
  bottom: 110px;
  left: 15px;
  background-color: $color-secondary;
  color: $color-white;
  border: none;
  border-radius: 50%;
  width: 60px;
  height: 60px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 24px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
  cursor: pointer;
  z-index: 9;
  transition: all 0.2s;
  
  &:hover:not(:disabled) {
    transform: scale(1.05);
    background-color: darken($color-secondary, 5%);
  }
  
  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
  
  &.active {
    background-color: $color-accent;
    
    &:hover {
      background-color: #ff3b30;
    }
  }
}

// Modal overlay
.modalOverlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.7);
  z-index: 100;
  display: flex;
  align-items: center;
  justify-content: center;
  animation: fadeIn 0.3s ease;
}

// Control panel modal
.controlPanelModal {
  background-color: $color-background-dark;
  border-radius: 12px;
  width: 90%;
  max-width: 500px;
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.5);
  animation: slideUp 0.3s ease;
  
  .modalHeader {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 15px 20px;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    
    h3 {
      margin: 0;
      color: $color-white;
    }
    
    .closeButton {
      background: none;
      border: none;
      color: $color-white;
      font-size: 20px;
      cursor: pointer;
      opacity: 0.7;
      transition: opacity 0.2s;
      
      &:hover {
        opacity: 1;
      }
    }
  }
  
  .controlsPanel {
    box-shadow: none;
    margin: 0;
    border-radius: 0 0 12px 12px;
  }
}

// Animations
@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes slideUp {
  from { transform: translateY(30px); opacity: 0; }
  to { transform: translateY(0); opacity: 1; }
}